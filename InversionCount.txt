#include <iostream>
#define ll long long
using namespace std;
ll merge(ll *a,ll s,ll e){
	ll mid = (s+e)/2;
	ll i = s;
	ll j = mid+1;
	ll k = s;
	ll temp[1000];

	ll invs = 0;
	
	while(i<=mid && j<=e){
		if(a[i]<=a[j]){
			temp[k++] = a[i++];
		}
		else{
			temp[k++] = a[j++];
			//This is important
			invs += (mid - i + 1);
		}
	}

	while(i<=mid){
		temp[k++] = a[i++];
	}
	while(j<=e){
		temp[k++] = a[j++];
	}
	//Copy the elements to original array a
	for(ll i=s;i<=e;i++){
		a[i] = temp[i];
	}
	return invs;
}

ll Inversion_MergeSort(ll *arr,ll s,ll e){
    if(s>=e) return 0;
     ll mid=(s+e)/2;
     ll a=Inversion_MergeSort(arr,s,mid);
     ll b=Inversion_MergeSort(arr,mid+1,e);
     //cross inversion
     int c=merge(arr,s,e);
     return a+b+c;
}
int main() {
    int t;
    cin>>t;
    while(t--){
        ll n;
        cin>>n;
        ll arr[n];
        for(int i=0;i<n;i++)cin>>arr[i];
        ll ans=Inversion_MergeSort(arr,0,n-1);
        cout<<ans<<endl;
    }
}
